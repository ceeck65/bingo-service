# Generated by Django 5.2.7 on 2025-10-21 04:09

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('bingo', '0002_bingogame_drawnball'),
    ]

    operations = [
        migrations.CreateModel(
            name='Operator',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Nombre del operador/marca', max_length=100)),
                ('code', models.CharField(help_text='Código único del operador (usado en URLs)', max_length=20, unique=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9_-]+$', 'Solo letras, números, _ y -')])),
                ('domain', models.CharField(blank=True, help_text='Dominio personalizado', max_length=100)),
                ('logo_url', models.URLField(blank=True, help_text='URL del logo del operador')),
                ('primary_color', models.CharField(default='#007bff', help_text='Color principal (hex)', max_length=7)),
                ('secondary_color', models.CharField(default='#6c757d', help_text='Color secundario (hex)', max_length=7)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('allowed_bingo_types', models.JSONField(default=list, help_text="Tipos de bingo permitidos: ['75', '85', '90']")),
                ('max_cards_per_player', models.IntegerField(default=5, help_text='Máximo cartones por jugador')),
                ('max_cards_per_game', models.IntegerField(default=100, help_text='Máximo cartones por partida')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AlterField(
            model_name='bingocard',
            name='bingo_type',
            field=models.CharField(choices=[('75', '75 bolas'), ('85', '85 bolas'), ('90', '90 bolas')], max_length=10),
        ),
        migrations.AlterField(
            model_name='bingogame',
            name='game_type',
            field=models.CharField(choices=[('75', '75 bolas'), ('85', '85 bolas'), ('90', '90 bolas')], max_length=10),
        ),
        migrations.CreateModel(
            name='BingoSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Nombre de la sesión', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Descripción de la sesión')),
                ('bingo_type', models.CharField(choices=[('75', '75 bolas'), ('85', '85 bolas'), ('90', '90 bolas')], max_length=10)),
                ('max_players', models.IntegerField(default=50, help_text='Máximo de jugadores')),
                ('entry_fee', models.DecimalField(decimal_places=2, default=0, help_text='Costo de entrada', max_digits=10)),
                ('total_cards', models.IntegerField(default=100, help_text='Cantidad total de cartones generados para esta sesión')),
                ('cards_generated', models.BooleanField(default=False, help_text='Si los cartones ya fueron generados')),
                ('allow_card_reuse', models.BooleanField(default=False, help_text='Permitir reutilizar cartones de otras sesiones')),
                ('scheduled_start', models.DateTimeField(help_text='Fecha y hora programada de inicio')),
                ('actual_start', models.DateTimeField(blank=True, help_text='Fecha y hora real de inicio', null=True)),
                ('actual_end', models.DateTimeField(blank=True, help_text='Fecha y hora real de fin', null=True)),
                ('status', models.CharField(choices=[('scheduled', 'Programada'), ('active', 'Activa'), ('paused', 'Pausada'), ('finished', 'Finalizada'), ('cancelled', 'Cancelada')], default='scheduled', max_length=20)),
                ('auto_start', models.BooleanField(default=False, help_text='Iniciar automáticamente')),
                ('auto_draw_interval', models.IntegerField(default=5, help_text='Intervalo entre extracciones (segundos)')),
                ('winning_patterns', models.JSONField(default=list, help_text='Patrones ganadores válidos para esta sesión')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.CharField(blank=True, help_text='Creado por (admin/operador)', max_length=100)),
                ('operator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='bingo.operator')),
            ],
            options={
                'ordering': ['-scheduled_start'],
            },
        ),
        migrations.CreateModel(
            name='BingoGameExtended',
            fields=[
                ('bingogame_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='bingo.bingogame')),
                ('auto_draw', models.BooleanField(default=False, help_text='Extracción automática')),
                ('draw_interval', models.IntegerField(default=5, help_text='Intervalo entre extracciones (segundos)')),
                ('max_balls', models.IntegerField(default=0, help_text='Máximo de bolas a extraer (0 = sin límite)')),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='games', to='bingo.bingosession')),
                ('operator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='games', to='bingo.operator')),
            ],
            options={
                'ordering': ['-created_at'],
            },
            bases=('bingo.bingogame',),
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('username', models.CharField(help_text='Nombre de usuario único', max_length=50)),
                ('email', models.EmailField(blank=True, help_text='Email del jugador', max_length=254)),
                ('phone', models.CharField(blank=True, help_text='Teléfono del jugador', max_length=20)),
                ('whatsapp_id', models.CharField(blank=True, help_text='ID de WhatsApp', max_length=100)),
                ('telegram_id', models.CharField(blank=True, help_text='ID de Telegram', max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('operator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='players', to='bingo.operator')),
            ],
            options={
                'ordering': ['username'],
                'unique_together': {('operator', 'username')},
            },
        ),
        migrations.CreateModel(
            name='BingoCardExtended',
            fields=[
                ('bingocard_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='bingo.bingocard')),
                ('status', models.CharField(choices=[('available', 'Disponible'), ('reserved', 'Reservado'), ('sold', 'Vendido'), ('cancelled', 'Cancelado')], default='available', help_text='Estado del cartón', max_length=20)),
                ('card_number', models.IntegerField(default=0, help_text='Número del cartón en la sesión')),
                ('purchase_price', models.DecimalField(decimal_places=2, default=0, help_text='Precio de compra', max_digits=10)),
                ('is_winner', models.BooleanField(default=False, help_text='Es cartón ganador')),
                ('winning_patterns', models.JSONField(default=list, help_text='Patrones ganadores')),
                ('prize_amount', models.DecimalField(decimal_places=2, default=0, help_text='Monto del premio', max_digits=10)),
                ('reserved_at', models.DateTimeField(blank=True, help_text='Fecha de reserva', null=True)),
                ('purchased_at', models.DateTimeField(blank=True, help_text='Fecha de compra', null=True)),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cards', to='bingo.bingosession')),
                ('player', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cards', to='bingo.player')),
            ],
            options={
                'ordering': ['session', 'card_number'],
                'unique_together': {('session', 'card_number')},
            },
            bases=('bingo.bingocard',),
        ),
        migrations.CreateModel(
            name='PlayerSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('cards_count', models.IntegerField(default=0, help_text='Número de cartones del jugador')),
                ('is_active', models.BooleanField(default=True)),
                ('has_won', models.BooleanField(default=False)),
                ('winning_cards', models.JSONField(default=list, help_text='IDs de cartones ganadores')),
                ('prize_amount', models.DecimalField(decimal_places=2, default=0, help_text='Monto del premio', max_digits=10)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='session_participations', to='bingo.player')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player_sessions', to='bingo.bingosession')),
            ],
            options={
                'ordering': ['-joined_at'],
                'unique_together': {('session', 'player')},
            },
        ),
    ]
